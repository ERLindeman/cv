# .github/workflows/build_cv.yml
name: Build CV, Cover Letter, and References

on:
  push:
    branches:
      - '**'       # Triggers on all branches
  pull_request:
    branches:
      - '**'       # Triggers on PRs to any branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Allows the workflow to push back to the repository

      # 2. Install LaTeX and Dependencies
      - name: Install LaTeX and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-latex-extra latexmk ghostscript

      # 3. Detect Changed Files
      - name: Detect Changed Files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            cv_tex:
              - 'cv.tex'
            cv_pdf:
              - 'cv.pdf'
            cover_letter_tex:
              - 'cover_letter.tex'
            cover_letter_pdf:
              - 'cover_letter.pdf'
            references_tex:
              - 'references.tex'
            references_pdf:
              - 'references.pdf'

      # 4. Compile and Compress Standard CV (if cv.tex changed and cv.pdf not changed)
      - name: Compile Standard CV
        if: ${{ steps.filter.outputs.cv_tex == 'true' && steps.filter.outputs.cv_pdf != 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cv.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Standard CV PDF
        if: ${{ steps.filter.outputs.cv_tex == 'true'}}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cv_temp.pdf cv.pdf
          mv cv_temp.pdf cv.pdf

      # 5. Compile and Compress Monochrome CV (if cv.tex changed)
      - name: Generate Monochrome CV tex file
        if: ${{ steps.filter.outputs.cv_tex == 'true' }}
        run: |
          echo '\def\monochrome{}\def\excludephoto{}\input{cv.tex}' > cv_monochrome.tex

      - name: Compile Monochrome CV
        if: ${{ steps.filter.outputs.cv_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cv_monochrome.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Monochrome CV PDF
        if: ${{ steps.filter.outputs.cv_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cv_monochrome_temp.pdf cv_monochrome.pdf
          mv cv_monochrome_temp.pdf cv_monochrome.pdf

      # 6. Compile and Compress Standard Cover Letter (if cover_letter.tex changed and cover_letter.pdf not changed)
      - name: Compile Standard Cover Letter
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' && steps.filter.outputs.cover_letter_pdf != 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cover_letter.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Standard Cover Letter PDF
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true'}}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cover_letter_temp.pdf cover_letter.pdf
          mv cover_letter_temp.pdf cover_letter.pdf

      # 7. Compile and Compress Monochrome Cover Letter (if cover_letter.tex changed)
      - name: Generate Monochrome Cover Letter tex file
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' }}
        run: |
          echo '\def\monochrome{}\def\excludephoto{}\input{cover_letter.tex}' > cover_letter_monochrome.tex

      - name: Compile Monochrome Cover Letter
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cover_letter_monochrome.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Monochrome Cover Letter PDF
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cover_letter_monochrome_temp.pdf cover_letter_monochrome.pdf
          mv cover_letter_monochrome_temp.pdf cover_letter_monochrome.pdf

      # 8. Compile and Compress Standard References (if references.tex changed and references.pdf not changed)
      - name: Compile Standard References
        if: ${{ steps.filter.outputs.references_tex == 'true' && steps.filter.outputs.references_pdf != 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: references.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Standard References PDF
        if: ${{ steps.filter.outputs.references_tex == 'true'}}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=references_temp.pdf references.pdf
          mv references_temp.pdf references.pdf

      # 9. Compile and Compress Monochrome References (if references.tex changed)
      - name: Generate Monochrome References tex file
        if: ${{ steps.filter.outputs.references_tex == 'true' }}
        run: |
          echo '\def\monochrome{}\def\excludephoto{}\input{references.tex}' > references_monochrome.tex

      - name: Compile Monochrome References
        if: ${{ steps.filter.outputs.references_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: references_monochrome.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."

      - name: Compress Monochrome References PDF
        if: ${{ steps.filter.outputs.references_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=references_monochrome_temp.pdf references_monochrome.pdf
          mv references_monochrome_temp.pdf references_monochrome.pdf

      # 10. Configure Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 11. Determine PDFs to Add
      - name: Determine PDFs to Add
        id: to_add
        run: |
          TO_ADD=""
          # CV
          if [ "${{ steps.filter.outputs.cv_tex }}" == "true" ]; then
            TO_ADD+=" cv.pdf cv_monochrome.pdf"
          fi
          # Cover Letter
          if [ "${{ steps.filter.outputs.cover_letter_tex }}" == "true" ]; then
            TO_ADD+=" cover_letter.pdf cover_letter_monochrome.pdf"
          fi
          # References
          if [ "${{ steps.filter.outputs.references_tex }}" == "true" ]; then
            TO_ADD+=" references.pdf references_monochrome.pdf"
          fi
          echo "to_add=$TO_ADD" >> $GITHUB_ENV

      # 12. Add PDF files to Git
      - name: Add PDF files
        run: |
          if [ -n "${{ env.to_add }}" ]; then
            git add ${{ env.to_add }}
          fi

      # 13. Commit changes
      - name: Commit PDFs
        run: |
          git commit -m "Update CV, Cover Letter, and References PDFs [skip ci]" || echo "No changes to commit"

      # 14. Push changes
      - name: Push PDFs
        run: |
          git push origin HEAD:${GITHUB_REF#refs/heads/}
