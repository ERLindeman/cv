# .github/workflows/build_cv.yml
name: Build CV, Cover Letter, and References

on:
  push:
    branches:
      - '**'       # Triggers on all branches
  pull_request:
    branches:
      - '**'       # Triggers on PRs to any branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Allows the workflow to push back to the repository

      # 2. Detect Changed Files
      - name: Detect Changed Files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            preamble_tex:
              - 'preamble.tex'
            cv_tex:
              - 'cv.tex'
            cv_pdf:
              - 'cv.pdf'
            cover_letter_tex:
              - 'cover_letter.tex'
            cover_letter_pdf:
              - 'cover_letter.pdf'
            references_tex:
              - 'references.tex'
            references_pdf:
              - 'references.pdf'

      # 3. Install LaTeX and Dependencies (only if any .tex files have changed)
      - name: Install LaTeX and Dependencies
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript imagemagick poppler-utils texlive-xetex texlive-fonts-recommended texlive-latex-extra latexmk

      # 4. Compile and Compress Monochrome CV (default)
      - name: Compile Monochrome CV
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cv.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Monochrome CV PDF
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cv_temp.pdf cv.pdf
          mv cv_temp.pdf cv.pdf

      # 5. Compile and Compress Colorful CV (if 'colorful' flag is set)
      - name: Generate Colorful CV tex file
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          echo '\def\colorful{}\input{cv.tex}' > cv_colorful.tex

      - name: Compile Colorful CV
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cv_colorful.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Colorful CV PDF
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cv_colorful_temp.pdf cv_colorful.pdf
          mv cv_colorful_temp.pdf cv_colorful.pdf

      # 6. Compile and Compress Monochrome Cover Letter (default)
      - name: Compile Monochrome Cover Letter
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cover_letter.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Monochrome Cover Letter PDF
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cover_letter_temp.pdf cover_letter.pdf
          mv cover_letter_temp.pdf cover_letter.pdf

      # 7. Compile and Compress Colorful Cover Letter (if 'colorful' flag is set)
      - name: Generate Colorful Cover Letter tex file
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          echo '\def\colorful{}\input{cover_letter.tex}' > cover_letter_colorful.tex

      - name: Compile Colorful Cover Letter
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: cover_letter_colorful.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Colorful Cover Letter PDF
        if: ${{ steps.filter.outputs.cover_letter_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=cover_letter_colorful_temp.pdf cover_letter_colorful.pdf
          mv cover_letter_colorful_temp.pdf cover_letter_colorful.pdf

      # 8. Compile and Compress Monochrome References (default)
      - name: Compile Monochrome References
        if: ${{ steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: references.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Monochrome References PDF
        if: ${{ steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=references_temp.pdf references.pdf
          mv references_temp.pdf references.pdf

      # 9. Compile and Compress Colorful References (if 'colorful' flag is set)
      - name: Generate Colorful References tex file
        if: ${{ steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          echo '\def\colorful{}\input{references.tex}' > references_colorful.tex

      - name: Compile Colorful References
        if: ${{ steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: references_colorful.tex
          compiler: 'latexmk'
          args: "-xelatex -nobibtex -f -synctex=1 -interaction=nonstopmode -file-line-error -outdir=."
        continue-on-error: true

      - name: Compress Colorful References PDF
        if: ${{ steps.filter.outputs.references_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' }}
        run: |
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
             -dNOPAUSE -dQUIET -dBATCH \
             -sOutputFile=references_colorful_temp.pdf references_colorful.pdf
          mv references_colorful_temp.pdf references_colorful.pdf

      # 10. Convert CV PDF to Images (only if cv.pdf or preamble.tex changed)
      - name: Convert CV PDF to Images
        if: ${{ steps.filter.outputs.cv_tex == 'true' || steps.filter.outputs.preamble_tex == 'true' || steps.filter.outputs.cv_pdf == 'true' }}
        run: |
          mkdir -p cv_images
          pdftoppm -png -f 1 -singlefile cv.pdf cv_thumbnail

      # 11. Configure Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 12. Determine PDFs to Add
      - name: Determine PDFs to Add
        id: to_add
        run: |
          TO_ADD=""
          # Monochrome CV
          if [ "${{ steps.filter.outputs.cv_tex }}" == "true" ] || [ "${{ steps.filter.outputs.preamble_tex }}" == "true" ]; then
            TO_ADD+=" cv.pdf cv_colorful.pdf cv_thumbnail.png"
          fi
          # Monochrome Cover Letter
          if [ "${{ steps.filter.outputs.cover_letter_tex }}" == "true" ] || [ "${{ steps.filter.outputs.preamble_tex }}" == "true" ]; then
            TO_ADD+=" cover_letter.pdf cover_letter_colorful.pdf"
          fi
          # Monochrome References
          if [ "${{ steps.filter.outputs.references_tex }}" == "true" ] || [ "${{ steps.filter.outputs.preamble_tex }}" == "true" ]; then
            TO_ADD+=" references.pdf references_colorful.pdf"
          fi
          echo "to_add=$TO_ADD" >> $GITHUB_ENV

      # 13. Add PDF files to Git
      - name: Add PDF files
        run: |
          if [ -n "${{ env.to_add }}" ]; then
            git add ${{ env.to_add }}
          fi

      # 14. Commit changes
      - name: Commit PDFs
        run: |
          git commit -m "Update CV, Cover Letter, and References PDFs [skip ci]" || echo "No changes to commit"

      # 15. Push changes
      - name: Push PDFs
        run: |
          git push origin HEAD:${GITHUB_REF#refs/heads/}
